-- MySQL Script generated by MySQL Workbench
-- Thu Apr 18 21:20:14 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Daianaolivera1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Daianaolivera1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Daianaolivera1` DEFAULT CHARACTER SET utf8 ;
USE `Daianaolivera1` ;

-- -----------------------------------------------------
-- Table `Daianaolivera1`.`Customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`Customers` (
  `custormers_id` INT NOT NULL,
  `name` VARCHAR(70) NULL,
  `address` VARCHAR(100) NULL,
  `credit limit` DECIMAL(10) NULL,
  `websites` VARCHAR(45) NULL,
  UNIQUE INDEX `custormers_id_UNIQUE` (`custormers_id` ASC) VISIBLE,
  PRIMARY KEY (`custormers_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`EMPLEYEES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`EMPLEYEES` (
  `empleyee_id` INT NOT NULL,
  `first_name` VARCHAR(70) NOT NULL,
  `last_name` VARCHAR(70) NOT NULL,
  `email` VARCHAR(15) NULL,
  `phone` INT NULL,
  `hire_date` DATETIME NOT NULL,
  `manager_id` INT NOT NULL,
  `job_title` VARCHAR(45) NULL,
  PRIMARY KEY (`empleyee_id`),
  UNIQUE INDEX `empleyee_id_UNIQUE` (`empleyee_id` ASC) VISIBLE,
  INDEX `empleyees_idx` (`manager_id` ASC) VISIBLE,
  CONSTRAINT `empleyeer`
    FOREIGN KEY (`manager_id`)
    REFERENCES `Daianaolivera1`.`EMPLEYEES` (`empleyee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`Orders` (
  `order_id` INT NOT NULL,
  `custormers_id` INT NOT NULL,
  `status` VARCHAR(10) NULL,
  `salesman_id` INT NOT NULL,
  `order_date` VARCHAR(45) NULL,
  PRIMARY KEY (`order_id`),
  UNIQUE INDEX `order_id_UNIQUE` (`order_id` ASC) VISIBLE,
  UNIQUE INDEX `custormers_id_UNIQUE` (`custormers_id` ASC) VISIBLE,
  UNIQUE INDEX `salesman_id_UNIQUE` (`salesman_id` ASC) VISIBLE,
  CONSTRAINT `1custoers`
    FOREIGN KEY (`custormers_id`)
    REFERENCES `Daianaolivera1`.`Customers` (`custormers_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_oreders`
    FOREIGN KEY (`salesman_id`)
    REFERENCES `Daianaolivera1`.`EMPLEYEES` (`empleyee_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`PRODUCT_CATEGORIES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`PRODUCT_CATEGORIES` (
  `category_id` INT NOT NULL,
  `category_name` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`category_id`),
  UNIQUE INDEX `category_id_UNIQUE` (`category_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`PRODUCTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`PRODUCTS` (
  `product_id` INT NOT NULL,
  `product_name` VARCHAR(70) NOT NULL,
  `description` VARCHAR(200) NULL,
  `standard_coast` DECIMAL(10,2) NOT NULL,
  `list_price` DECIMAL(10,2) NOT NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`product_id`),
  UNIQUE INDEX `products_id_UNIQUE` (`product_id` ASC) VISIBLE,
  INDEX `products_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_products`
    FOREIGN KEY (`category_id`)
    REFERENCES `Daianaolivera1`.`PRODUCT_CATEGORIES` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_oredrs_items`
    FOREIGN KEY (`category_id`)
    REFERENCES `Daianaolivera1`.`ORDER_ITEMS` (`orders_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`ORDER_ITEMS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`ORDER_ITEMS` (
  `orders_id` INT NOT NULL,
  `item_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `unit_price` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`orders_id`, `item_id`),
  UNIQUE INDEX `orders_id_UNIQUE` (`orders_id` ASC) VISIBLE,
  INDEX `fk_orders_products_categories_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_orders_items`
    FOREIGN KEY (`orders_id`)
    REFERENCES `Daianaolivera1`.`Orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_products_categories`
    FOREIGN KEY (`product_id`)
    REFERENCES `Daianaolivera1`.`PRODUCTS` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`CONTACTS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`CONTACTS` (
  `contact_id` INT NOT NULL,
  `first_name` VARCHAR(70) NOT NULL,
  `last_name` VARCHAR(70) NOT NULL,
  `email` VARCHAR(45) NULL,
  `phone` VARCHAR(15) NULL,
  `custormers_id` INT NOT NULL,
  PRIMARY KEY (`contact_id`),
  UNIQUE INDEX `contact_id_UNIQUE` (`contact_id` ASC) VISIBLE,
  CONSTRAINT `fk_contacts`
    FOREIGN KEY (`custormers_id`)
    REFERENCES `Daianaolivera1`.`Customers` (`custormers_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`REGIONS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`REGIONS` (
  `region_id` INT NOT NULL,
  `region_name` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`region_id`),
  UNIQUE INDEX `region_id_UNIQUE` (`region_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`COUNTRIES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`COUNTRIES` (
  `country_id` INT NOT NULL,
  `country_name` VARCHAR(70) NOT NULL,
  `region_id` INT NOT NULL,
  PRIMARY KEY (`country_id`),
  UNIQUE INDEX `countri_id_UNIQUE` (`country_id` ASC) VISIBLE,
  CONSTRAINT `countries`
    FOREIGN KEY (`region_id`)
    REFERENCES `Daianaolivera1`.`REGIONS` (`region_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`LOCATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`LOCATION` (
  `location_id` INT NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `postal_code` VARCHAR(10) NULL,
  `city` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `country_id` INT NOT NULL,
  UNIQUE INDEX `location_id_UNIQUE` (`location_id` ASC) VISIBLE,
  PRIMARY KEY (`location_id`),
  INDEX `fk_location_idx` (`country_id` ASC) VISIBLE,
  CONSTRAINT `fk_location`
    FOREIGN KEY (`country_id`)
    REFERENCES `Daianaolivera1`.`COUNTRIES` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`WAREHOUSE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`WAREHOUSE` (
  `warehouse_id` INT NOT NULL,
  `warehouse_name` VARCHAR(70) NULL,
  `location_id` INT NOT NULL,
  PRIMARY KEY (`warehouse_id`),
  UNIQUE INDEX `warehouse_id_UNIQUE` (`warehouse_id` ASC) VISIBLE,
  INDEX `location_idx` (`location_id` ASC) VISIBLE,
  CONSTRAINT `location`
    FOREIGN KEY (`location_id`)
    REFERENCES `Daianaolivera1`.`LOCATION` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Daianaolivera1`.`INVENTORIES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Daianaolivera1`.`INVENTORIES` (
  `inventories_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `warehouse_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`inventories_id`),
  UNIQUE INDEX `product_id_UNIQUE` (`product_id` ASC) VISIBLE,
  UNIQUE INDEX `warehouse_id_UNIQUE` (`warehouse_id` ASC) VISIBLE,
  CONSTRAINT `products`
    FOREIGN KEY (`product_id`)
    REFERENCES `Daianaolivera1`.`PRODUCTS` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `inventories`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `Daianaolivera1`.`WAREHOUSE` (`warehouse_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
